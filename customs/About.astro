---
/**
 *  About 关于
 *
 * ------------------------------------------------------------
 *
 * 	Copyright © 2024 湖南大沥网络科技有限公司.
 *
 * 	  author:	木炭(WOODCOAL)
 * 	   email:	i@woodcoal.cn
 * 	homepage:	http://www.hunandali.com/
 *
 * ------------------------------------------------------------
 */

import ERROR from './Error.astro';

export interface Props {
	/** 网址 */
	homepage?: string;

	/** 项目标题 */
	title?: string;

	/** 版权 */
	copyright?: string;

	/** 描述 */
	description?: string;

	/** 版本，不设置将不显示版权及弹窗信息 */
	version?: string;

	/** 项目图标 */
	icon?: string;
}

let {
	homepage,
	title,
	description,
	version,
	copyright,
	icon = 'logo-logo',
	...props
} = Astro.props as Props;

/** 网站名称 */
title = title || import.meta.env.APP_NAME;

/** 域名 */
homepage = homepage || import.meta.env.APP_URL || Astro.site?.origin || Astro.url.origin;

/** 版权 */
copyright =
	copyright ||
	`© ${new Date().getFullYear()} ${import.meta.env.APP_COMPANY || import.meta.env.APP_NAME}`;

/** 描述 */
description = description || import.meta.env.APP_DESCRIPTION;

/** 版本 */
version = version || import.meta.env.APP_VERSION;
---

<dl-about {...props}>
	<a href={homepage} target="_blank" class="text-secondary text-truncate">
		<slot>{copyright}</slot>
	</a>
	{
		Astro.slots.has('version') ? (
			<span class="a ms-2">
				<slot name="version" />
			</span>
		) : (
			version && <i class="a ms-2 badge text-secondary">ver:{version}</i>
		)
	}
	{
		(version || Astro.slots.has('version')) && (
			<div class="d-none" data-icon={icon} data-title={title}>
				<ERROR size="md" theme="primary" icon="logo-logo" title={title}>
					{version && (
						<div class="badge text-bg-warning text-3">
							VER
							<span class="badge text-warning rounded-1">{version}</span>
						</div>
					)}
					<div class="my-2 text-secondary">
						<slot name="description">{description}</slot>
					</div>
					<a href={homepage} class="text-secondary text-truncate text-3" target="_blank">
						{copyright}
					</a>
				</ERROR>
			</div>
		)
	}
</dl-about>

<script>
	import { openModal } from '../libs/client';

	class DlAbout extends HTMLElement {
		connectedCallback() {
			const btn = this.querySelector('.a');
			if (!btn) return;

			const message = this.querySelector('div')?.innerHTML;
			btn.addEventListener('click', () => {
				openModal({ icon: '-', title: '', message, theme: 'primary', showClose: false });
			});
		}
	}

	customElements.define('dl-about', DlAbout);
</script>
