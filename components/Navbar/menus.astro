---
/**
 * 	Navbar/menus 导航栏菜单项目
 *
 * ------------------------------------------------------------
 *
 * 	Copyright © 2024 湖南大沥网络科技有限公司.
 *
 * 	  author:	木炭(WOODCOAL)
 * 	   email:	i@woodcoal.cn
 * 	homepage:	http://www.hunandali.com/
 *
 * ------------------------------------------------------------
 */

import { hasArray, type Dict } from '@da.li/core-libs';
import { ClassClear } from '../../libs';
import type { DropdownItem } from '../Dropdown.astro';
import Badge from '../Badge.astro';
import Dropdown from '../Dropdown.astro';
import Link from '../Link.astro';

/** 导航项目 */
export interface NavbarItem extends DropdownItem {
	/** 子菜单项 */
	children?: NavbarItem[];
}

export interface Props {
	/** 布局方式 */
	layout?: 'horizontal' | 'vertical';

	/** 导航项 */
	items?: NavbarItem[];

	/** 是否为标签页 */
	tab?: boolean;

	/** 使用背景按钮 */
	pill?: boolean;

	/** 是否为下划线 */
	underline?: boolean;

	/** 状态属性是在 item 上还是 link 上 */
	porpsOnItem?: boolean;

	/** 布局方式: fill 填充 | justified 等分 */
	flex?: 'fill' | 'justified';

	/** 自定义类名 */
	class?: string;
}

const {
	layout = 'horizontal',
	tab = false,
	pill = false,
	underline = false,
	porpsOnItem = false,
	flex,
	items = [],
	class: className,
	...props
} = Astro.props;

const itemClass = (item: NavbarItem) => {
	const classes = ['nav-item', item.class];

	if (porpsOnItem) {
		if (item.disabled) classes.push('disabled');
		if (item.active) classes.push('active');
	}

	return ClassClear(classes);
};

const linkClass = (item: NavbarItem) => {
	const classes = ['nav-link', item.class];
	if (hasArray(item.children)) classes.push('dropdown-toggle');

	if (!porpsOnItem) {
		if (item.disabled) classes.push('disabled');
		if (item.active) classes.push('active');
	}

	return ClassClear(classes);
};

const classList = ClassClear([
	'nav',
	layout === 'vertical' && 'flex-column',
	tab && 'nav-tabs',
	pill && 'nav-pills',
	underline && 'nav-underline',
	flex && `nav-${flex}`,
	className
]);

const dropdownProps = (item: NavbarItem) => {
	const data: Dict = { ...item };
	delete data.children;
	return data;
};
---

<ul class={classList} {...props}>
	<slot name="before" />

	{
		items?.map((item) =>
			hasArray(item.children) ? (
				<Dropdown items={item.children} element="li" class={itemClass(item)}>
					<Link
						class={linkClass(item)}
						{...dropdownProps(item)}
						slot="button"
						href="#"
						data-bs-toggle="dropdown"
						data-bs-trigger="hover"
						aria-expanded="false">
						{item.bagde && <Badge {...item.bagde} />}
					</Link>
				</Dropdown>
			) : (
				<li class={itemClass(item)}>
					<Link class={linkClass(item)} {...item}>
						{item.bagde && <Badge {...item.bagde} />}
					</Link>
				</li>
			)
		)
	}

	<slot name="after" />
</ul>
