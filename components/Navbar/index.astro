---
/**
 * 	Navbar 导航栏组件
 *
 * ------------------------------------------------------------
 *
 * 	Copyright © 2024 湖南大沥网络科技有限公司.
 *
 * 	  author:	木炭(WOODCOAL)
 * 	   email:	i@woodcoal.cn
 * 	homepage:	http://www.hunandali.com/
 *
 * ------------------------------------------------------------
 */

import { globalId, hasArray, hasObject } from '@da.li/core-libs';
import { ClassClear } from '../../libs';
import type { ILink, ISize, IThemeFull } from '../../types';
import Icon from '../Icon.astro';
import NavMenu, { type NavbarItem } from './menus.astro';
import Link from '../Link.astro';

export interface Props {
	/** 导航栏品牌/标题 */
	brand?: ILink;

	/** 切换按钮(开启或者图标) */
	toggler?: boolean | string;

	/** 导航项 */
	items?: NavbarItem[];

	/** 导航栏颜色主题 */
	theme?: IThemeFull;

	/** 导航栏位置 */
	placement?: 'fixed-top' | 'fixed-bottom' | 'sticky-top' | 'sticky-bottom';

	/** 导航栏展开断点 */
	expand?: ISize | 'xxl';

	/** 是否整个页面宽度 */
	size?: ISize | 'xxl' | 'fluid' | 'auto';

	/** 布局类型 */
	layout?: 'horizontal' | 'vertical';

	/** 自定义标签 */
	element?: string;

	/** 菜单表示，用于切换导航栏 */
	id?: string;

	/** 移动菜单模式：ture 左侧滑出，false 顶部弹出 */
	mobileMenu?: boolean;

	/** 自定义类名 */
	class?: string;
}

const {
	layout,
	element = 'nav',
	brand,
	toggler = true,
	items = [],
	theme,
	placement,
	expand = 'lg',
	size = 'auto',
	class: className = '',
	mobileMenu = false,
	id,
	...props
} = Astro.props;

// 构建类名
const classList = ClassClear([
	'navbar',
	layout === 'vertical' && 'navbar-vertical',
	expand && `navbar-expand-${expand}`,
	theme && theme !== 'dark' && `bg-${theme}`,
	mobileMenu ? 'fixed-top' : placement,
	mobileMenu && 'navbar-mobile',
	className
]);

// 生成唯一ID
const navbarId = id ? 'navbar' : globalId('navbar');

const Element = element || 'nav';
const ElementProps = {
	...props,
	class: classList,
	id: `${navbarId}-container`,
	'data-bs-theme': theme === 'dark' ? 'dark' : undefined
};

/** 页面宽度布局 */
const containerClass = size && size !== 'auto' ? `container-${size}` : 'container';
---

<Element {...ElementProps}>
	<div class={containerClass}>
		<!-- 切换开关 -->
		{
			toggler && (
				<button
					class="navbar-toggler  order-0"
					type="button"
					data-bs-toggle="collapse"
					data-bs-target={`#${navbarId}`}
					aria-controls={navbarId}
					aria-expanded="false"
					aria-label="切换导航">
					{toggler === true ? (
						<span class="navbar-toggler-icon" />
					) : (
						<Icon icon={toggler} />
					)}
				</button>
			)
		}

		<!-- 品牌 -->
		{
			Astro.slots.has('brand') ? (
				<div class="navbar-brand  order-1">
					<slot name="brand" />
				</div>
			) : (
				hasObject(brand) && <Link class="navbar-brand order-1" {...brand} />
			)
		}

		<!-- 导航 -->
		{
			hasArray(items) && (
				<div class="collapse navbar-collapse mx-lg-4 mx-0 order-3 order-md-2" id={navbarId}>
					<NavMenu items={items} class="navbar-nav">
						<slot name="navBefore" slot="before" />
						<slot name="navAfter" slot="after" />
					</NavMenu>
				</div>
			)
		}

		<!-- 其他自定义 -->
		{
			Astro.slots.has('default') && (
				<div class="order-2 order-md-3">
					<slot />
				</div>
			)
		}
	</div>
</Element>

<style lang="less" is:global>
	@media screen and (max-width: 991.98px) {
		.navbar-mobile.navbar {
			.navbar-collapse {
				position: fixed;
				top: 0;
				left: -100%;
				// top: 3.5rem;
				z-index: 1045;
				// height: calc(100vh - 3.5rem);
				height: 100vh;
				min-width: 200px;
				max-width: 300px;
				width: 30%;
				background-color: var(--bs-body-bg);
				margin: 0;
				transition: left 0.3s ease-in-out;
				box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);

				&.show {
					left: 0;
					&::before {
						content: '';
						position: fixed;
						left: 0;
						top: 0;
						width: 100vw;
						height: 100vh;
						background-color: rgba(0, 0, 0, 0.5);
						z-index: -1;
					}
				}

				.nav {
					background: var(--tblr-navbar-bg);
					height: 100%;
					width: 100%;
					display: block;
					overflow: hidden;
					overflow-y: auto;

					.dropdown-menu {
						background: rgba(255, 255, 255, 0.1);
						margin: 0 0.5rem 0.5rem 0.5rem;
					}
					.nav-item {
						width: 100%;
					}
				}
			}
		}
	}
</style>

<script>
	const elements = document.querySelectorAll('.navbar.navbar-mobile');
	if (elements.length) {
		elements.forEach((element) => {
			const navbar = element.querySelector(`.navbar-collapse`);
			if (!navbar) return;

			// 所有切换按钮
			const navId = navbar.id;
			const togglers = navId ? document.querySelectorAll(`[data-bs-target="#${navId}"]`) : [];

			// 获取body元素
			const body = document.body;

			// 监听菜单展开/关闭事件
			navbar.addEventListener('show.bs.collapse', () => {
				body.style.overflow = 'hidden';
			});

			navbar.addEventListener('hide.bs.collapse', () => {
				body.style.overflow = 'auto';
			});

			// 点击页面任意位置关闭菜单
			navbar.addEventListener('click', (event) => {
				// 导航菜单区域
				const nav = navbar.querySelector('.nav');
				if (!nav) return;

				// 当前点击项目
				const target = event.target as Element;

				// 非菜单区域才可以关闭菜单
				if (target === nav || !nav.contains(target)) {
					navbar.classList.remove('show');
					body.style.overflow = 'auto';

					// 同步更新切换按钮状态
					togglers &&
						togglers.length &&
						togglers.forEach((toggler) => {
							toggler.setAttribute('aria-expanded', 'false');
						});
				}
			});
		});
	}
</script>
