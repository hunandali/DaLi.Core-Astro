---
/**
 * 	Breadcrumb 面包屑
 *
 * ------------------------------------------------------------
 *
 * 	Copyright © 2024 湖南大沥网络科技有限公司.
 *
 * 	  author:	木炭(WOODCOAL)
 * 	   email:	i@woodcoal.cn
 * 	homepage:	http://www.hunandali.com/
 *
 * ------------------------------------------------------------
 */

import { ClassClear } from '../libs';
import type { ILink } from '../types';
import Link from './Link.astro';

export interface Props {
	/** 链接 */
	items: ILink[];

	/** 分隔符 */
	separator?: 'slash' | 'dot' | 'arrow' | 'bullet';

	/** 最后一个是否链接是否显示选中模式(选中则高亮) */
	showActive?: boolean;

	/** 自定义类名 */
	class?: string;
}

const {
	items,
	separator = 'slash',
	showActive = true,
	class: className,
	...props
} = Astro.props as Props;

const prefixSlot = Astro.slots.has('prefix') && (await Astro.slots.render('prefix'))?.trim();
const defaultSlot = Astro.slots.has('default') && (await Astro.slots.render('default'))?.trim();

const classSeparator = separator != 'slash' ? `breadcrumb-${separator}s` : '';
const classList = ClassClear(['breadcrumb', classSeparator, className]);

/**
 * 面包屑项类名
 *
 * @param index 索引(-1 表示 default slot)
 * @returns 类名
 */
const classItem = (index: number) => {
	if (!showActive) return 'breadcrumb-item';

	// 必须显示选中，只有最后一个才显示，如果包含 slots.default，则 slot 显示
	if (index === -1) return 'breadcrumb-item active';
	if (defaultSlot && index > -1) return 'breadcrumb-item';
	if (index === items.length - 1) return 'breadcrumb-item active';
};
---

<ol class={classList} {...props}>
	{
		prefixSlot && (
			<li class="breadcrumb-item">
				<Fragment set:html={prefixSlot} />
			</li>
		)
	}

	{
		items.map((item, index) => (
			<li class={classItem(index)}>
				<Link {...item} />
			</li>
		))
	}

	{
		defaultSlot && (
			<li class={classItem(-1)}>
				<Fragment set:html={defaultSlot} />
			</li>
		)
	}
</ol>

<style lang="less" is:global>
	.page-footer {
		.breadcrumb {
			display: inline-flex;
		}
	}
</style>
